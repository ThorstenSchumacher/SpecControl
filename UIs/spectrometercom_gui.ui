<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>speccom_mainwin</class>
 <widget class="QWidget" name="speccom_mainwin">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>458</width>
    <height>298</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Form</string>
  </property>
  <property name="styleSheet">
   <string notr="true">button-&gt;setStyleSheet(&quot;border-image:url(:/icons/arrow_l.png);&quot;);</string>
  </property>
  <widget class="QFrame" name="frame">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>10</y>
     <width>451</width>
     <height>281</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">background-color: rgb(50, 49, 52);
border-radius: 0px;</string>
   </property>
   <property name="frameShape">
    <enum>QFrame::StyledPanel</enum>
   </property>
   <property name="frameShadow">
    <enum>QFrame::Raised</enum>
   </property>
   <widget class="QLabel" name="label">
    <property name="enabled">
     <bool>false</bool>
    </property>
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>10</y>
      <width>231</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: transparent;
border: none;</string>
    </property>
    <property name="text">
     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:14pt; font-weight:600; color:#f0f0f0;&quot;&gt;SpecControl&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
    </property>
   </widget>
   <widget class="QSlider" name="horizontalSlider_bright">
    <property name="geometry">
     <rect>
      <x>89</x>
      <y>140</y>
      <width>301</width>
      <height>22</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid black;
    height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
    margin: 2px 0;
	background: rgba(100, 150, 200,50);
}

QSlider::handle:horizontal {
    background: rgb(100,150,200);
    border: 1px solid #5c5c5c;
    width: 18px;
    margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
    border-radius: 3px;
}</string>
    </property>
    <property name="minimum">
     <number>0</number>
    </property>
    <property name="value">
     <number>0</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QSlider" name="horizontalSlider_gain">
    <property name="geometry">
     <rect>
      <x>89</x>
      <y>170</y>
      <width>301</width>
      <height>22</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid black;
    height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
    margin: 2px 0;
	background: rgba(100, 150, 200,50);
}

QSlider::handle:horizontal {
    background: rgb(100,150,200);
    border: 1px solid #5c5c5c;
    width: 18px;
    margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
    border-radius: 3px;
}</string>
    </property>
    <property name="minimum">
     <number>1</number>
    </property>
    <property name="maximum">
     <number>100</number>
    </property>
    <property name="value">
     <number>20</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QLabel" name="label_15">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>140</y>
      <width>61</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">border-radius: 2px;
background-color: rgba(255, 0, 100, 0);
border-color: rgba(5, 5, 5, 0);
border-width: 1px;

</string>
    </property>
    <property name="text">
     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;right&quot;&gt;&lt;span style=&quot; color:#ffffff;&quot;&gt;Gain&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="checkBox_bayercorr">
    <property name="geometry">
     <rect>
      <x>320</x>
      <y>200</y>
      <width>111</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
	
	background-color: rgba(255, 255, 255, 0);
	border: none;
	color: white;
}</string>
    </property>
    <property name="text">
     <string>bayer correction</string>
    </property>
    <property name="checked">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QSlider" name="horizontalSlider_exposure">
    <property name="geometry">
     <rect>
      <x>89</x>
      <y>110</y>
      <width>301</width>
      <height>22</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QSlider::groove:horizontal {
    border: 1px solid black;
    height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
    margin: 2px 0;
	background: rgba(100, 150, 200,50);
}

QSlider::handle:horizontal {
    background: rgb(100,150,200);
    border: 1px solid #5c5c5c;
    width: 18px;
    margin: -2px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
    border-radius: 3px;
}</string>
    </property>
    <property name="minimum">
     <number>-14</number>
    </property>
    <property name="maximum">
     <number>0</number>
    </property>
    <property name="value">
     <number>-8</number>
    </property>
    <property name="sliderPosition">
     <number>-8</number>
    </property>
    <property name="orientation">
     <enum>Qt::Horizontal</enum>
    </property>
    <property name="invertedAppearance">
     <bool>false</bool>
    </property>
    <property name="invertedControls">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QLabel" name="label_16">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>170</y>
      <width>61</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">border-radius: 2px;
background-color: rgba(255, 0, 100, 0);
border-color: rgba(5, 5, 5, 0);
border-width: 1px;

</string>
    </property>
    <property name="text">
     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;right&quot;&gt;&lt;span style=&quot; color:#ffffff;&quot;&gt;Average&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_14">
    <property name="geometry">
     <rect>
      <x>20</x>
      <y>110</y>
      <width>61</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">border-radius: 2px;
background-color: rgba(255, 0, 100, 0);
border-color: rgba(5, 5, 5, 0);
border-width: 1px;

</string>
    </property>
    <property name="text">
     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p align=&quot;right&quot;&gt;&lt;span style=&quot; color:#ffffff;&quot;&gt;Exposure&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
    </property>
   </widget>
   <widget class="QFrame" name="frame_2">
    <property name="geometry">
     <rect>
      <x>-10</x>
      <y>45</y>
      <width>481</width>
      <height>51</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">border-radius: 0px;
border: 3px solid rgba(0, 0, 0, 50);
background-color: rgba(0, 0, 0, 50);

</string>
    </property>
    <property name="frameShape">
     <enum>QFrame::StyledPanel</enum>
    </property>
    <property name="frameShadow">
     <enum>QFrame::Raised</enum>
    </property>
    <widget class="QComboBox" name="comboBox_camport">
     <property name="geometry">
      <rect>
       <x>130</x>
       <y>15</y>
       <width>51</width>
       <height>22</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(255,255,255)
</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_comrefresh">
     <property name="geometry">
      <rect>
       <x>220</x>
       <y>10</y>
       <width>101</width>
       <height>30</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
	border: none;
	background-color: rgb(50, 50, 50);
	color: white;
	font: 12pt &quot;MS Shell Dlg 2&quot;;
}

QPushButton:hover {
	background-color: rgb(100, 150, 200);
	color: white;
}

QPushButton:pressed {
	background-color: rgb(130, 180, 230);
	color: white;
}</string>
     </property>
     <property name="text">
      <string>refresh</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_comconnect">
     <property name="geometry">
      <rect>
       <x>330</x>
       <y>10</y>
       <width>101</width>
       <height>30</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton {
	border: none;
	background-color: rgb(50, 50, 50);
	color: white;
	font: 12pt &quot;MS Shell Dlg 2&quot;;
}

QPushButton:hover {
	background-color: rgb(100, 150, 200);
	color: white;
}

QPushButton:pressed {
	background-color: rgb(130, 180, 230);
	color: white;
}</string>
     </property>
     <property name="text">
      <string>connect</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_3">
     <property name="geometry">
      <rect>
       <x>30</x>
       <y>10</y>
       <width>91</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: transparent;
border-color: transparent;</string>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:12pt; color:#ffffff;&quot;&gt;source ID:&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
     </property>
    </widget>
   </widget>
   <widget class="QCheckBox" name="checkBox_spectrum">
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>200</y>
      <width>80</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
	
	background-color: rgba(255, 255, 255, 0);
	border: none;
	color: white;
}</string>
    </property>
    <property name="text">
     <string>spectrum</string>
    </property>
   </widget>
   <widget class="QCheckBox" name="checkBox_average">
    <property name="geometry">
     <rect>
      <x>130</x>
      <y>200</y>
      <width>101</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
	
	background-color: rgba(255, 255, 255, 0);
	border: none;
	color: white;
}</string>
    </property>
    <property name="text">
     <string>averaging</string>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton_settings">
    <property name="geometry">
     <rect>
      <x>30</x>
      <y>240</y>
      <width>121</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
	border: none;
	border-radius: 0px;
	background-color: rgb(90, 90, 90);
	color: white;
}

QPushButton:hover {
	background-color: rgb(155, 0, 0);
	color: white;
}

QPushButton:pressed {
	background-color: rgb(255, 0, 0);
	color: white;
}</string>
    </property>
    <property name="text">
     <string>settings</string>
    </property>
    <property name="checkable">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QPushButton" name="pushButton_savespec">
    <property name="geometry">
     <rect>
      <x>300</x>
      <y>240</y>
      <width>121</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
	border: none;
	border-radius: 0px;
	background-color: rgb(150, 0, 0);
	color: white;
	font: 10pt &quot;MS Shell Dlg 2&quot;;
}

QPushButton:hover {
	background-color: rgb(200, 0, 0);
	color: white;
}

QPushButton:pressed {
	background-color: rgb(255, 0, 0);
	color: white;
}

QToolTip {
 color: #ffffff; background-color: #000000; border: 0px;
}


</string>
    </property>
    <property name="text">
     <string>save spectrum</string>
    </property>
    <property name="checkable">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QFrame" name="frame_3">
    <property name="geometry">
     <rect>
      <x>450</x>
      <y>95</y>
      <width>311</width>
      <height>191</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: rgba(0,0,0,0);</string>
    </property>
    <property name="frameShape">
     <enum>QFrame::StyledPanel</enum>
    </property>
    <property name="frameShadow">
     <enum>QFrame::Raised</enum>
    </property>
    <widget class="QComboBox" name="comboBox_devices">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>145</y>
       <width>171</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">color: rgb(255,255,255);
background-color: rgba(0,0,0,100);
</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_9">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>10</y>
       <width>271</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">background-color: transparent;
background: rgba(0,0,0,100);
color: rgb(100,150,200);</string>
     </property>
     <property name="text">
      <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:12pt; color:#6496c8;&quot;&gt;active analyses tools&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
     </property>
     <property name="alignment">
      <set>Qt::AlignCenter</set>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_adddev">
     <property name="geometry">
      <rect>
       <x>205</x>
       <y>145</y>
       <width>41</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton
{
background-color: rgba(255,255,255,20);
border: none;
background-image: url(:/icons/plus.png);
}


QPushButton:hover
{
background-color: rgba(255,255,255,40);
border: none;
background-image: url(:/icons/plusH.png);
}


QPushButton:pressed
{
background-color: rgba(100,150,200,255);
border: none;
background-image: url(:/icons/plusH.png);
}


</string>
     </property>
     <property name="text">
      <string extracomment="internal sensors"/>
     </property>
    </widget>
    <widget class="QPushButton" name="pushButton_deldev">
     <property name="geometry">
      <rect>
       <x>250</x>
       <y>145</y>
       <width>41</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QPushButton
{
background-color: rgba(255,255,255,20);
border: none;
background-image: url(:/icons/minus.png);
}


QPushButton:hover
{
background-color: rgba(255,255,255,40);
border: none;
background-image: url(:/icons/minusH.png);
}


QPushButton:pressed
{
background-color: rgba(100,150,200,255);
border: none;
background-image: url(:/icons/minusH.png);
}


</string>
     </property>
     <property name="text">
      <string extracomment="internal sensors"/>
     </property>
    </widget>
    <widget class="QListWidget" name="listWidget_interf">
     <property name="geometry">
      <rect>
       <x>20</x>
       <y>45</y>
       <width>271</width>
       <height>91</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QListWidget
{
font: 12pt &quot;MS Shell Dlg 2&quot;;
color: rgb(210,210,210);
background: rgba(0,0,0,100);
border: 2px white;
}

QListView::item:selected
{
color: rgb(255,255,255);
background : rgb(100,150,200);
}


QScrollBar:vertical {
    background: transparent;
    width: 15px;
    margin: 0;
}

QScrollBar::handle:vertical {
    background: rgb(60, 110, 160);
    min-height: 16px;
    border-radius: 5px;
}

QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {
    background: none;
}

QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical {
      border: none;
      background: none;
}</string>
     </property>
     <property name="selectionMode">
      <enum>QAbstractItemView::SingleSelection</enum>
     </property>
    </widget>
   </widget>
   <widget class="QPushButton" name="pushButton_saveimg">
    <property name="geometry">
     <rect>
      <x>165</x>
      <y>240</y>
      <width>121</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QPushButton {
	border: none;
	border-radius: 0px;
	background-color: rgb(90, 90, 90);
	color: white;
}

QPushButton:hover {
	background-color: rgb(155, 0, 0);
	color: white;
}

QPushButton:pressed {
	background-color: rgb(255, 0, 0);
	color: white;
}</string>
    </property>
    <property name="text">
     <string>save frame</string>
    </property>
    <property name="checkable">
     <bool>false</bool>
    </property>
   </widget>
   <widget class="QCheckBox" name="checkBox_grayscale">
    <property name="geometry">
     <rect>
      <x>230</x>
      <y>200</y>
      <width>80</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">QCheckBox {
	
	background-color: rgba(255, 255, 255, 0);
	border: none;
	color: white;
}</string>
    </property>
    <property name="text">
     <string>grayscale</string>
    </property>
   </widget>
   <widget class="QLabel" name="label_exposure">
    <property name="geometry">
     <rect>
      <x>390</x>
      <y>110</y>
      <width>31</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">border-radius: 2px;
background-color: rgba(0, 0, 0, 50);
border-color: rgba(5, 5, 5, 0);
border-width: 1px;
color: white;</string>
    </property>
    <property name="text">
     <string>-10</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_bright">
    <property name="geometry">
     <rect>
      <x>390</x>
      <y>140</y>
      <width>31</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">border-radius: 2px;
background-color: rgba(0, 0, 0, 50);
border-color: rgba(5, 5, 5, 0);
border-width: 1px;
color: white;</string>
    </property>
    <property name="text">
     <string>0</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_aver">
    <property name="geometry">
     <rect>
      <x>390</x>
      <y>170</y>
      <width>31</width>
      <height>21</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">border-radius: 2px;
background-color: rgba(0, 0, 0, 50);
border-color: rgba(5, 5, 5, 0);
border-width: 1px;
color: white;</string>
    </property>
    <property name="text">
     <string>1</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignCenter</set>
    </property>
   </widget>
   <widget class="QLabel" name="label_status">
    <property name="geometry">
     <rect>
      <x>190</x>
      <y>5</y>
      <width>181</width>
      <height>31</height>
     </rect>
    </property>
    <property name="styleSheet">
     <string notr="true">background-color: transparent;
border-color: transparent;</string>
    </property>
    <property name="text">
     <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;&lt;span style=&quot; font-size:12pt; color:#ff0000;&quot;&gt;waiting&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
    </property>
    <property name="alignment">
     <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
    </property>
   </widget>
  </widget>
  <widget class="QPushButton" name="pushButton_exit">
   <property name="geometry">
    <rect>
     <x>415</x>
     <y>22</y>
     <width>20</width>
     <height>20</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	border: none;
	border-radius: 0px;
	background-color: rgb(120,0,0);
	background-image: url(:/icons/exit.png);
	color: white;
	font: 10pt &quot;MS Shell Dlg 2&quot;;
}

QPushButton:hover {
	background-color: rgb(255, 0, 0);
	color: white;
}

</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
  <widget class="QPushButton" name="pushButton_help">
   <property name="geometry">
    <rect>
     <x>390</x>
     <y>22</y>
     <width>20</width>
     <height>20</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">QPushButton {
	border: none;
	border-radius: 0px;
	background-color: rgb(100,100,100);
	background-image: url(:/icons/help.png);
	color: white;
	font: 10pt &quot;MS Shell Dlg 2&quot;;
}

QPushButton:hover {
	background-color: rgb(100, 150, 200);
	color: white;
}

</string>
   </property>
   <property name="text">
    <string/>
   </property>
  </widget>
 </widget>
 <resources>
  <include location="../graphics/icons/buttons.qrc"/>
 </resources>
 <connections/>
</ui>
